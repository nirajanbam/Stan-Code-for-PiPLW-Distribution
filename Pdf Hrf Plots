## Pi power Logistic_Weibull distribution
rm(list = ls())
## Probability density function(pdf) of Pi Transform Weibull distribution  
dpi.trans.weib <- function (x, alpha, beta, log = FALSE)
{
  if((!is.numeric(alpha)) || (!is.numeric(beta)))
    stop("non-numeric argument to mathematical function")
  if((min(alpha) < 0) || (min(beta) < 0))    
    stop("Invalid arguments")	
  z <- exp(-alpha*(x^beta))
  t <- 2*alpha*beta*log(pi)/(pi-1)
  gx <- x ^ (beta-1)
  tmp <- (1-z)/(1+z)
  pdf <- t * gx * z * ((1+z)^-2) * (pi^tmp) 	
  if (log) 
    pdf<- log(pdf)	
  return(pdf)   
}
## ***************************************************************************
## Cummulative distribution function(cdf) of Pi Transform Weibull distribution  
ppi.trans.weib <- function(q, alpha, beta, lower.tail = TRUE, log.p = FALSE)
{
  if((!is.numeric(alpha)) || (!is.numeric(beta)))
    stop("non-numeric argument to mathematical function")
  if((min(alpha) < 0) || (min(beta) < 0))    
    stop("Invalid arguments") 
  u <- exp(-alpha*(q^beta))
  z <- (1-u)/(1+u)
  cdf <- (pi^z -1)/(pi-1)
  if(!lower.tail)
    cdf <- 1.0 - cdf
  if(log.p)
    cdf <- log(cdf)
  return(cdf)
}
## ***************************************************************************
## Quantile function of Pi Transform Weibull distribution 
qpi.trans.weib <- function(p, alpha, beta, lower.tail = TRUE, log.p = FALSE)
{
  if((!is.numeric(alpha)) || (!is.numeric(beta)) || (!is.numeric(p)))
    stop("non-numeric argument to mathematical function")
  if((min(alpha) < 0) || (min(beta) < 0))
    stop("Invalid arguments")
  k <- log(1+p*(pi-1))/log(pi)
  t <- (1-k)/(1+k)		
  qtl <- (-(1/alpha)*log(t)) ^ (1/beta)
  if (!lower.tail) 
    k <- log(1+(1-p)*(pi-1))/log(pi)
  t <- (1-k)/(1+k)		
  qtl <- (-(1/alpha)*log(t)) ^ (1/beta)  
  if (log.p) 
    qtl<- log(qtl) 	
  return(qtl)   
}
## ***************************************************************************
## Hazard function of Pi Transform Weibull distribution 
hpi.trans.weib <- function (x, alpha, beta)
{
  if((!is.numeric(alpha)) || (!is.numeric(beta)))
    stop("non-numeric argument to mathematical function")
  if((min(alpha) < 0) || (min(beta) < 0))    
    stop("Invalid arguments")
  hrf <- dpi.trans.weib(x, alpha, beta)/ (1.0 - ppi.trans.weib(x, alpha, beta))
  return(hrf) 
}


# =======  PDF plot of of DPT-W ===================

windows(5,5)

alpha = c(7.5, 10.0, 2.5, 3.0, 4.5) # right
beta=   c(4.5, 2.5, 4.5, 0.2, 1.5) # also sharp up
cols=c("black","firebrick","royalblue","magenta","springgreen")
lw=2
x=seq(0.001, 8.0,length=500)
par(mar = c(4.5, 4.5, 1.2, 1.2))  # Adjust the margins
plot(x, dpi.trans.weib(x=x, alpha=alpha[1], beta=beta[1]), type="l",lwd=lw,
     lty=1,col=cols[1],xlab="y", ylab="f(y)", xlim=c(0, 1.5),ylim=c(0.0, 4.0), las=1, main=" ")
lines(x,dpi.trans.weib(x=x,alpha=alpha[2], beta=beta[2]), col=cols[2],lty=3,lwd=lw)
lines(x,dpi.trans.weib(x=x,alpha=alpha[3], beta=beta[3]),col=cols[3],lty=4,lwd=lw)
lines(x,dpi.trans.weib(x=x,alpha=alpha[4], beta=beta[4]),col=cols[4],lty=6,lwd=lw)
lines(x,dpi.trans.weib(x=x,alpha=alpha[5], beta=beta[5]),col=cols[5],lty=9,lwd=lw)


legend(x="topright",inset=c(0.01,0.01),cex = 0.65,
       legend=c(expression(list(rho==paste("7.5"), omega==paste("4.5"))),
                expression(list(rho==paste("10.0"), omega==paste("2.5"))),
                expression(list(rho==paste("2.5"), omega==paste("4.5"))),
                expression(list(rho==paste("3.0"), omega==paste("0.2"))),
                expression(list(rho==paste("4.5"), omega==paste("1.5")))),
       lty=c(1, 3, 4, 6, 9), col=cols, lwd=lw)


# =======  HRF plot of of PiPLW===================

windows(5,5)

alpha = c(1.5, 0.5, 0.5, 1.5, 1.2) # right
beta=   c(0.2, 2.5, 1.5, 4.2, 2.0) # also sharp up
#lambda= c(1.5, 0.7, 3.0, 1.0, 0.7) # up
cols=c("black","firebrick","royalblue","magenta","springgreen")
lw=2
x=seq(0.001, 8.0,length=500)
par(mar = c(4.5, 4.5, 1.2, 1.2))  # Adjust the margins
plot(x, hpi.trans.weib(x=x, alpha=alpha[1], beta=beta[1]), type="l",lwd=lw,
     lty=1,col=cols[1],xlab="y", ylab="Hazard function", xlim=c(0, 3),ylim=c(0.0, 3), las=1, main=" ")
lines(x,hpi.trans.weib(x=x,alpha=alpha[2], beta=beta[2]), col=cols[2],lty=3,lwd=lw)
lines(x,hpi.trans.weib(x=x,alpha=alpha[3], beta=beta[3]),col=cols[3],lty=4,lwd=lw)
lines(x,hpi.trans.weib(x=x,alpha=alpha[4], beta=beta[4]),col=cols[4],lty=6,lwd=lw)
lines(x,hpi.trans.weib(x=x,alpha=alpha[5], beta=beta[5]),col=cols[5],lty=12,lwd=lw)


legend(x="topright", inset=c(0.01, 0.1), cex = 0.7,
       legend=c(expression(list(rho==paste("1.5"), omega==paste("0.2"))),
                expression(list(rho==paste("0.5"), omega==paste("2.5"))),
                expression(list(rho==paste("0.5"), omega==paste("1.5"))),
                expression(list(rho==paste("1.5"), omega==paste("4.2"))),
                expression(list(rho==paste("1.2"), omega==paste("2.0")))),
       lty=c(1, 3, 4, 6, 12), col=cols, lwd=lw)


